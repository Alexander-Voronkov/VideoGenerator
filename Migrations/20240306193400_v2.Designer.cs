// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGenerator.Infrastructure;

#nullable disable

namespace VideoGenerator.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240306193400_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.Attachment", b =>
                {
                    b.Property<long>("AttachmentId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.Property<long>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MimeType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("AttachmentId")
                        .HasName("PK_AttachmentId");

                    b.HasIndex("MessageId");

                    b.HasIndex("AttachmentId", "MessageId")
                        .IsDescending();

                    b.ToTable("MessageAttachments");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.Group", b =>
                {
                    b.Property<long>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupLink")
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .HasColumnType("TEXT");

                    b.Property<long>("TopicId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupId")
                        .HasName("PK_GroupId");

                    b.HasIndex("TopicId", "GroupId")
                        .IsDescending()
                        .HasDatabaseName("UI_TopicId_GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("TEXT");

                    b.HasKey("LanguageId")
                        .HasName("PK_LanguageId");

                    b.HasIndex("LanguageId", "LanguageCode")
                        .IsDescending();

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.PublishedMessage", b =>
                {
                    b.Property<long>("PublishedMessageId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("SourceGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StolenAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("TargetGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Text");

                    b.HasKey("PublishedMessageId")
                        .HasName("PK_PublishedMessageId");

                    b.HasIndex("SourceGroupId");

                    b.HasIndex("TargetGroupId");

                    b.HasIndex("PublishedMessageId", "TargetGroupId", "SourceGroupId")
                        .IsDescending()
                        .HasDatabaseName("UI_PublishedMessageId_GroupId");

                    b.ToTable("PublishedMessages", t =>
                        {
                            t.HasCheckConstraint("CK_Message_Text", "LENGTH(Text) > 1");
                        });
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.QueueMessage", b =>
                {
                    b.Property<long>("QueueMessageId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SourceGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StolenAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("TargetGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Text");

                    b.HasKey("QueueMessageId")
                        .HasName("PK_QueueMessageId");

                    b.HasIndex("SourceGroupId");

                    b.HasIndex("TargetGroupId");

                    b.HasIndex("QueueMessageId", "TargetGroupId", "SourceGroupId")
                        .IsDescending()
                        .HasDatabaseName("UI_QueueMessageId_GroupId");

                    b.ToTable("QueueMessages", t =>
                        {
                            t.HasCheckConstraint("CK_Message_Text", "LENGTH(Text) > 1");
                        });
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.Topic", b =>
                {
                    b.Property<long>("TopicId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TopicName")
                        .HasColumnType("TEXT");

                    b.HasKey("TopicId")
                        .HasName("PK_TopicId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TopicName", "TopicId", "LanguageId")
                        .IsDescending()
                        .HasDatabaseName("UI_TopicName_TopicId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.Attachment", b =>
                {
                    b.HasOne("VideoGenerator.Infrastructure.Entities.PublishedMessage", "PublishedMessage")
                        .WithMany("Attachments")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGenerator.Infrastructure.Entities.QueueMessage", "Message")
                        .WithMany("Attachments")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");

                    b.Navigation("PublishedMessage");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.Group", b =>
                {
                    b.HasOne("VideoGenerator.Infrastructure.Entities.Topic", "Topic")
                        .WithMany("Groups")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.PublishedMessage", b =>
                {
                    b.HasOne("VideoGenerator.Infrastructure.Entities.Group", "SourceGroup")
                        .WithMany("OutputPublishedMessages")
                        .HasForeignKey("SourceGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VideoGenerator.Infrastructure.Entities.Group", "TargetGroup")
                        .WithMany("InputPublishedMessages")
                        .HasForeignKey("TargetGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SourceGroup");

                    b.Navigation("TargetGroup");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.QueueMessage", b =>
                {
                    b.HasOne("VideoGenerator.Infrastructure.Entities.Group", "SourceGroup")
                        .WithMany("OutputQueueMessages")
                        .HasForeignKey("SourceGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VideoGenerator.Infrastructure.Entities.Group", "TargetGroup")
                        .WithMany("InputQueueMessages")
                        .HasForeignKey("TargetGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SourceGroup");

                    b.Navigation("TargetGroup");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.Topic", b =>
                {
                    b.HasOne("VideoGenerator.Infrastructure.Entities.Language", "Language")
                        .WithMany("Topics")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.Group", b =>
                {
                    b.Navigation("InputPublishedMessages");

                    b.Navigation("InputQueueMessages");

                    b.Navigation("OutputPublishedMessages");

                    b.Navigation("OutputQueueMessages");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.Language", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.PublishedMessage", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.QueueMessage", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("VideoGenerator.Infrastructure.Entities.Topic", b =>
                {
                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
